#define B0 31
#define C1 33
#define CS1 35
#define D1 37
#define DS1 39
#define E1 41
#define F1 44
#define FS1 46
#define G1 49
#define GS1 52
#define A1 55
#define AS1 58
#define B1 62
#define C2 65
#define CS2 69
#define D2 73
#define DS2 78
#define E2 82
#define F2 87
#define FS2 93
#define G2 98
#define GS2 104
#define A2 110
#define AS2 117
#define B2 123
#define C3 131
#define CS3 139
#define D3 147
#define DS3 156
#define E3 165
#define F3 175
#define FS3 185
#define G3 196
#define GS3 208
#define A3 220
#define AS3 233
#define B3 247
#define C4 262
#define CS4 277
#define D4 294
#define DS4 311
#define E4 330
#define F4 349
#define FS4 370
#define G4 392
#define GS4 415
#define A4 440
#define AS4 466
#define B4 494
#define C5 523
#define CS5 554
#define D5 587
#define DS5 622
#define E5 659
#define F5 698
#define FS5 740
#define G5 784
#define GS5 831
#define A5 880
#define AS5 932
#define B5 988
#define C6 1047
#define CS6 1109
#define D6 1175
#define DS6 1245
#define E6 1319
#define F6 1397
#define FS6 1480
#define G6 1568
#define GS6 1661
#define A6 1760
#define AS6 1865
#define B6 1976
#define C7 2093
#define CS7 2217
#define D7 2349
#define DS7 2489
#define E7 2637
#define F7 2794
#define FS7 2960
#define G7 3136
#define GS7 3322
#define A7 3520
#define AS7 3729
#define B7 3951
#define C8 4186
#define CS8 4435
#define D8 4699
#define DS8 4978
int tonePin = 11;
int tones[] = {E4, CS4, B4, GS4, A4, A4, GS4, A4, GS4, FS4, E4, GS4, B4, CS4, E4, A4, A4, GS4, A4, GS4, B4, E5, A4, GS4, GS4, E4, A3, CS4, FS4, CS5, CS5, A4, FS4, CS4, A3, E4, E5, E4, FS4, E4, FS4, E4, B3, CS4, B3, A3, B3, CS4, CS4, A4, GS4, E4, E4, D4, CS4, CS4, A3, D4, A3, D4, CS4, A3, GS3, GS3, B3, B3, GS3, GS3, E3, GS3, B3, D4, D4, E4, E4, E4, FS4, E4, FS4, E4, CS4, GS3, B3, A3, B3, E4, FS4, A3, A4, GS4, E4, A3, A3, A3, D4, D4, E4, A3, B3, A3, A3, D3, D3, D3, CS3, CS3, FS3, D4, FS4, D4, GS4, GS3, E3, GS3, GS3, E4, GS4, E4, B4, A4, GS4, A4, GS4, E4, B3, GS3, FS4, D4, FS4, A4, GS4, A4, GS4, FS4, D4, FS4, A4, B4, E4, E4, FS4, D4, FS4, A4, A4, FS4, GS4, A4, B4, E5, E5, E5, CS5, D5, DS5, CS5, E4, B4, B5, AS5, A5, GS5, G5, FS5, F5, E5, DS5, D5, CS5, C5, B4, AS4, A4, GS4, G4, FS4, F4, E4, A3, E4, B4, GS4, A4, A4, GS4, A4, GS4, FS4, E4, GS4, E4, FS4, GS4, B4, GS4, A4, B4, A4, E4, B4, GS4, A4, A4, B4, CS5, B4, B4, B4, D5, CS5, B4, A4, A3, D4, B4, GS4, A4, A4, GS4, A4, GS4, FS4, E4, E5, D5, CS5, B4, A4, E4, B4, GS4, A4, A4, B4, CS5, B4, B4, B4, D5, CS5, B4, CS5, A3, CS4, FS4, A4, GS4, A4, GS4, A3, E4, E4, GS4, CS4, CS4, CS4, B4, GS4, A4, A3, E4, E4, A4, D5, CS5, CS4, A4, E4, A4, A4, E4, B4, A4, GS4, A4, CS5, B4, E5, GS4, A4, GS4, E4, FS4, GS4, B4, GS4, A4, B4, A4, CS5, B4, E5, FS5, CS5, A4, FS4, CS4, A3, FS3, CS3, E4, E4, FS4, A4, E4, FS4, E4, FS4, E4, B3, CS4, B3, A3, B3, CS4, CS4, A4, GS4, E4, E4, D4, CS4, CS4, A3, D4, A3, D4, CS4, A3, GS3, GS3, B3, B3, GS3, GS3, E3, GS3, B3, B3, GS3, D3, G3, B3, F3, CS3, F3, E4, FS4, E4, FS4, E4, CS4, GS3, B3, A3, B3, E4, FS4, A3, A4, GS4, E4, A3, A3, A3, D4, D4, E4, A3, B3, A3, A3, D3, D3, D3, CS3, CS3, FS3, D4, FS4, D4, GS4, GS3, E3, GS3, GS3, E4, GS4, E4, B4, A4, GS4, A4, GS4, E4, B3, GS3, FS4, D4, FS4, A4, GS4, A4, GS4, FS4, D4, FS4, A4, B4, E4, E4, FS4, D4, FS4, A4, A4, FS4, GS4, A4, B4, E5, E5, E5, CS5, D5, DS5, CS5, E4, B4, B5, AS5, A5, GS5, G5, FS5, F5, E5, DS5, D5, CS5, C5, B4, AS4, A4, GS4, G4, FS4, F4, E4, A3, E4, B4, GS4, A4, A4, GS4, A4, GS4, FS4, E4, GS4, E4, FS4, GS4, B4, GS4, A4, B4, A4, E4, B4, GS4, A4, A4, B4, CS5, B4, B4, B4, D5, CS5, B4, A4, A3, D4, B4, GS4, A4, A4, GS4, A4, GS4, FS4, E4, E5, D5, CS5, B4, A4, E4, B4, GS4, A4, A4, B4, CS5, B4, B4, B4, D5, CS5, B4, CS5, A3, CS4, FS4, A4, GS4, A4, GS4, A3, E4, E4, GS4, CS4, CS4, CS4, B4, GS4, A4, A3, E4, E4, A4, D5, CS5, CS4, A4, E4, A4, A4, E4, B4, A4, GS4, A4, C3, E3, A3, E4, E4, E4, D4, C4, B3, C4, D4, D4, C4, B3, G3, A3, G3, G4, B3, E3, G3, A3, B3, C4, D4, D4, C4, D4, E4, E4, F4, E4, D4, C4, C4, G3, D3, E3, G3, A3, E3, G3, D4, C4, B3, G3, A3, G3, C4, E3, G3, D4, D4, D4, C4, E4, E4, D4, C4, C4, D4, FS2, A2, B2, B2, E3, D4, FS3, C4, D4, E4, B4, E4, E5, A3, E4, B4, GS4, A4, A4, GS4, A4, GS4, FS4, E4, GS3, B3, A3, GS3, E4, B4, GS4, A4, A4, B4, CS5, B4, B4, B4, D5, CS5, B4, A4, A3, D4, B4, GS4, A4, A4, GS4, A4, GS4, FS4, E4, E5, D5, CS5, B4, A4, E4, B4, GS4, A4, A4, B4, CS5, B4, B4, B4, D5, CS5, B4, CS5, A3, CS4, FS4, A4, GS4, A4, GS4, A3, E4, E4, GS4, CS4, CS4, CS4, B4, GS4, A4, A3, E4, E4, A4, D5, CS5, CS5, A4, GS4, A4, A4, CS5, B4, E4, B4, A4, GS4, A4, GS4, E4, FS4, GS4, B4, GS4, GS4, B4, A4, CS5, B4, E5, FS5, CS5, A4, FS4, CS4, A3, FS3, CS3, FS3, GS4, A4, B4, A4, A4, A4, A4, GS4, GS4, GS4, GS4, GS4, GS4, A4, A4, B4, D5, CS5, CS4, A4, A4, A4, A4, B4, B4, B4, B4, A4, A4, A4, A4, A4, A4, A4, B4, CS3, FS3, A3, CS4, E4, B4, B4, A4, B4, E5};
int delays[] = {520, 177, 345, 185, 848, 388, 177, 177, 345, 185, 848, 715, 706, 36, 46, 659, 344, 177, 177, 10, 46, 306, 168, 177, 177, 512, 27, 46, 483, 168, 177, 177, 177, 177, 1350, 71, 1411, 336, 185, 512, 194, 177, 345, 353, 353, 353, 353, 185, 848, 388, 177, 177, 177, 177, 177, 177, 345, 185, 345, 353, 520, 194, 345, 353, 185, 512, 194, 177, 177, 177, 177, 177, 177, 529, 177, 697, 185, 512, 194, 512, 194, 177, 345, 353, 353, 353, 353, 353, 530, 353, 520, 362, 185, 345, 353, 185, 345, 185, 345, 353, 18, 678, 362, 520, 529, 865, 380, 353, 353, 185, 177, 512, 362, 520, 362, 353, 353, 185, 345, 185, 177, 177, 177, 177, 177, 177, 345, 353, 353, 353, 353, 185, 848, 380, 353, 353, 353, 353, 185, 848, 380, 353, 353, 185, 177, 521, 353, 353, 185, 177, 353, 353, 177, 177, 177, 177, 177, 529, 26, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 17, 18, 18, 18, 18, 21, 171, 345, 353, 353, 185, 512, 362, 353, 353, 353, 185, 848, 212, 177, 177, 177, 177, 177, 177, 177, 345, 353, 353, 185, 1183, 229, 177, 512, 194, 512, 194, 345, 185, 345, 353, 530, 353, 353, 185, 512, 362, 353, 353, 353, 185, 848, 380, 353, 353, 353, 353, 353, 353, 185, 1183, 229, 177, 512, 194, 512, 194, 345, 185, 345, 353, 530, 353, 353, 353, 353, 185, 848, 380, 185, 177, 177, 353, 177, 177, 177, 177, 848, 380, 185, 177, 177, 345, 18, 511, 185, 345, 353, 1861, 441, 177, 177, 177, 10, 1517, 741, 706, 538, 865, 212, 177, 177, 177, 177, 177, 177, 177, 680, 706, 706, 706, 203, 177, 177, 177, 177, 177, 177, 177, 177, 177, 529, 177, 697, 185, 512, 194, 177, 345, 353, 353, 353, 353, 185, 848, 388, 177, 177, 177, 177, 177, 177, 345, 185, 345, 353, 520, 194, 345, 353, 185, 512, 194, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 345, 185, 512, 194, 512, 194, 177, 345, 353, 353, 353, 353, 353, 530, 353, 520, 362, 185, 345, 353, 185, 345, 185, 345, 353, 18, 678, 362, 520, 529, 865, 380, 353, 353, 185, 177, 512, 362, 520, 362, 353, 353, 185, 345, 185, 177, 177, 177, 177, 177, 177, 345, 353, 353, 353, 353, 185, 848, 380, 353, 353, 353, 353, 185, 848, 380, 353, 353, 185, 177, 521, 353, 353, 185, 177, 353, 353, 177, 177, 177, 177, 177, 529, 26, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 17, 18, 18, 18, 18, 21, 171, 345, 353, 353, 185, 512, 362, 353, 353, 353, 185, 848, 212, 177, 177, 177, 177, 177, 177, 177, 345, 353, 353, 185, 1183, 229, 177, 512, 194, 512, 194, 345, 185, 345, 353, 530, 353, 353, 185, 512, 362, 353, 353, 353, 185, 848, 380, 353, 353, 353, 353, 353, 353, 185, 1183, 229, 177, 512, 194, 512, 194, 345, 185, 345, 353, 530, 353, 353, 353, 353, 185, 848, 380, 185, 177, 177, 353, 177, 177, 177, 177, 848, 380, 185, 177, 177, 345, 18, 511, 185, 345, 353, 1861, 441, 177, 177, 177, 10, 167, 46, 659, 512, 185, 261, 265, 181, 261, 265, 181, 345, 185, 345, 185, 177, 848, 715, 371, 362, 345, 185, 177, 353, 177, 177, 353, 177, 177, 345, 185, 177, 353, 177, 10, 511, 353, 353, 353, 353, 278, 88, 340, 185, 177, 353, 177, 848, 380, 278, 88, 340, 185, 177, 353, 521, 185, 177, 177, 177, 680, 203, 177, 177, 345, 185, 177, 177, 177, 177, 177, 1350, 71, 1410, 336, 353, 353, 185, 512, 362, 353, 353, 353, 185, 848, 715, 706, 203, 177, 345, 353, 185, 1183, 229, 177, 512, 194, 512, 194, 345, 185, 345, 353, 530, 353, 353, 185, 512, 362, 353, 353, 353, 185, 848, 380, 353, 353, 353, 353, 353, 353, 185, 1183, 229, 177, 512, 194, 512, 194, 345, 185, 345, 353, 530, 353, 353, 353, 353, 185, 848, 380, 185, 177, 177, 353, 177, 177, 177, 177, 848, 380, 185, 177, 177, 345, 185, 345, 185, 345, 353, 18, 1517, 573, 194, 177, 177, 177, 1518, 247, 177, 177, 177, 177, 177, 177, 177, 680, 706, 706, 706, 203, 177, 177, 177, 177, 177, 177, 177, 345, 530, 185, 345, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 353, 185, 177, 529, 177, 715, 46, 46, 966, 1311, 432, 366, 539, 1, 5540};
double mod = 1;
void song()
{
    for (int i = 0; i < sizeof(delays) / sizeof(delays[0]); i++)
    {
        tone(tonePin, tones[i], delays[i]);
        delay(delays[i] * mod + 25);
    }
}
void setup() {}
void loop() { song(); }