#define B0  31
#define C1  33
#define CS1 35
#define D1  37
#define DS1 39
#define E1  41
#define F1  44
#define FS1 46
#define G1  49
#define GS1 52
#define A1  55
#define AS1 58
#define B1  62
#define C2  65
#define CS2 69
#define D2  73
#define DS2 78
#define E2  82
#define F2  87
#define FS2 93
#define G2  98
#define GS2 104
#define A2  110
#define AS2 117
#define B2  123
#define C3  131
#define CS3 139
#define D3  147
#define DS3 156
#define E3  165
#define F3  175
#define FS3 185
#define G3  196
#define GS3 208
#define A3  220
#define AS3 233
#define B3  247
#define C4  262
#define CS4 277
#define D4  294
#define DS4 311
#define E4  330
#define F4  349
#define FS4 370
#define G4  392
#define GS4 415
#define A4  440
#define AS4 466
#define B4  494
#define C5  523
#define CS5 554
#define D5  587
#define DS5 622
#define E5  659
#define F5  698
#define FS5 740
#define G5  784
#define GS5 831
#define A5  880
#define AS5 932
#define B5  988
#define C6  1047
#define CS6 1109
#define D6  1175
#define DS6 1245
#define E6  1319
#define F6  1397
#define FS6 1480
#define G6  1568
#define GS6 1661
#define A6  1760
#define AS6 1865
#define B6  1976
#define C7  2093
#define CS7 2217
#define D7  2349
#define DS7 2489
#define E7  2637
#define F7  2794
#define FS7 2960
#define G7  3136
#define GS7 3322
#define A7  3520
#define AS7 3729
#define B7  3951
#define C8  4186
#define CS8 4435
#define D8  4699
#define DS8 4978
int tonePin = 11;
int tones[] = {F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,CS4,DS4,C4,CS4,C4,CS4,C4,C5,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,CS4,DS4,C4,CS4,C4,CS4,C4,C5,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,DS4,CS4,C4,CS4,C4,CS4,C4,F2,GS2,C3,GS2,F2,GS2,CS3,C3,GS2,G3,GS3,G3,F3,G3,GS3,G3,F3,GS3,F3,C4,C4,CS4,CS4,CS4,CS4,CS4,DS4,C4,CS4,C4,G3,GS3,G3,F3,G3,GS3,G3,F3,GS3,F3,C4,C4,CS4,CS4,CS4,CS4,C4,CS4,DS4,CS4,C4,CS4,C4,F3,AS3,AS3,GS3,AS3,AS3,C4,C4,C4,C4,CS4,CS4,CS4,CS4,CS4,CS4,DS4,FS4,GS3,G3,FS3,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,CS4,DS4,C4,CS4,C4,CS4,C4,C5,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,DS4,CS4,C4,CS4,C4,CS4,C4,A2,AS2,B2,C3,CS3,D3,DS3,E3,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,DS4,CS4,C4,CS4,C4,CS4,C4,G3,GS3,G3,F3,GS3,F3,GS3,F3,C4,CS4,CS4,CS4,CS4,CS4,C4,C4,C4,C4,C4,C5,G3,GS3,G3,GS3,GS3,F3,C4,C4,CS4,GS3,CS4,CS4,DS4,CS4,C4,CS4,C4,GS3,G3,FS3,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,CS4,DS4,C4,CS4,C4,CS4,C4,C5,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,DS4,CS4,C4,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,CS4,DS4,C4,CS4,C4,CS4,C4,C5,F3,C4,B3,C4,B3,C4,B3,C4,GS3,F3,F3,GS3,C4,CS4,GS3,DS4,CS4,C4,C4,C4,G4,G4,G4,FS3,CS4,C4,CS4,C4,CS4,C4,CS4,A3,FS3,FS3,A3,CS4,D4,A3,D4,E4,CS4,D4,CS4,D4,CS4,CS5,FS3,CS4,C4,CS4,C4,CS4,C4,CS4,A3,FS3,FS3,A3,CS4,D4,A3,E4,D4,CS4,D4,CS4,D4,CS4,FS3,CS4,C4,CS4,C4,CS4,C4,CS4,A3,FS3,FS3,A3,CS4,D4,A3,D4,E4,CS4,D4,CS4,D4,CS4,CS5,FS3,CS4,C4,CS4,C4,CS4,C4,CS4,A3,FS3,FS3,A3,CS4,D4,A3,E4,D4,CS4,D4,CS4,D4,CS4,CS4,D4,CS4,D4,CS4,CS4,D4,CS4,D4,CS4,F4,FS4};
int delays[] = {750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,1000,500,500,500,500,500,500,250,250,500,250,250,250,250,250,250,250,250,375,375,1000,250,250,250,250,250,500,500,375,375,1000,500,250,250,250,250,250,250,250,375,375,1000,250,250,250,250,250,250,250,250,250,375,375,5000,250,250,250,250,1000,250,375,375,1000,250,250,250,250,250,500,500,1500,3000,500,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,1000,250,250,250,250,250,250,250,250,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,2750,250,250,250,250,1000,250,375,375,1250,250,250,250,1000,250,250,250,250,1000,250,7500,500,750,250,1000,500,250,1000,250,250,500,500,250,250,250,375,375,5750,500,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,2000,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,334,334,334,334,334,316,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,1000,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,500,500,750,250,125,125,125,125,250,250,500,750,250,250,250,500,500,500,500,250,250,250,250,1000,250,250,250,250,1000,250,250,250,250,500,500,5139};
double mod = 1;
void song() {
for(int i = 0; i < sizeof(delays)/sizeof(delays[0]); i++){
tone(tonePin, tones[i], delays[i]);
delay(delays[i]*mod + 25);}}
void setup() {}
void loop() {song();}